{"version":3,"sources":["store.js","components/navbar.js","components/description.js","components/skills.js","components/portfolio.js","components/contact.js","components/experience.js","App.js","serviceWorker.js","index.js"],"names":["createStore","state","action","type","Object","objectSpread","pageInfo","NavbarComp","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","social","store","subscribe","setState","getState","react_default","a","createElement","Navbar","inverse","collapseOnSelect","className","Header","Brand","href","Toggle","Collapse","Nav","NavItem","eventKey","pullRight","map","index","concat","link","target","icon","Component","Description","description","desc","key","Skills","webDevSkills","langSkills","proSkills","skill","src","imgurl","alt","height","width","level","Button","id","CV","rel","bsStyle","Portfolio","portfolio","Row","port","Col","name","sm","Alert","xsHidden","url","img","technologies","github","Contact","email","class","user","Experience","experience","xp","logo","institution","title","subtitle","dates","App","axios","get","then","response","data","dispatch","catch","error","console","log","navbar","greet","greetDescription","skills","contact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cf2e120d.chunk.js","sourcesContent":["import { createStore } from 'redux';\n\nconst reducer = (state, action) => {\n    if (action.type === \"setPageInfo\") {\n        return {\n            ...state,\n            pageInfo: action.pageInfo\n        }\n    } \n    return state;\n\n}\n\nexport default createStore(reducer);","import React, { Component } from 'react';\nimport {Nav, Navbar, NavItem } from 'react-bootstrap'\nimport '../App.css';\nimport store from \"../store\";\n\nclass NavbarComp extends Component {\n    constructor() {\n        super()\n        this.state = {\n            pageInfo: {social: [\"\"]}\n        }\n        store.subscribe(() => {\n          this.setState({\n            pageInfo: store.getState().pageInfo\n          })\n        })\n    }\n    render() {\n      return (\n          <Navbar inverse collapseOnSelect className=\"navbar-fixed-top\">\n            <Navbar.Header>\n              <Navbar.Brand>\n                <a href=\"#home\"> David R Zuluaga</a>\n              </Navbar.Brand>\n              <Navbar.Toggle />\n            </Navbar.Header>\n            <Navbar.Collapse>\n              <Nav>\n                <NavItem eventKey={1} href=\"#description\">\n                    About Me\n                </NavItem>\n                <NavItem eventKey={2} href=\"#skills\">\n                    Skills\n                </NavItem>\n                <NavItem eventKey={3} href=\"#portfolio\">\n                    Portfolio\n                </NavItem>\n                <NavItem eventKey={4} href=\"#experience\">\n                    Experience\n                </NavItem>\n                <NavItem eventKey={5} href=\"#contact\">\n                  Contact\n                </NavItem>\n              </Nav>\n              <Nav pullRight className=\"hidden-xs\">\n                {this.state.pageInfo.social.map((social, index) =>  \n                    <NavItem href={`${social.link}`} eventKey={index} target=\"_blank\">\n                        <i className={social.icon} />\n                    </NavItem>\n                )}\n              </Nav>\n            </Navbar.Collapse>\n          </Navbar>\n        )\n    }\n}\nexport default NavbarComp;\n","import React, { Component } from 'react';\n//import { Col } from 'react-bootstrap'\nimport store from \"../store\";\nimport '../App.css';\n\nclass Description extends Component {\n    constructor() {\n        super()\n        this.state = {\n            pageInfo: {description: [\"\"]}\n        }\n        store.subscribe(() => {\n          this.setState({\n            pageInfo: store.getState().pageInfo\n          })\n        })\n    }\n    render() {\n      return (\n          <div className=\"description\">\n            {this.state.pageInfo.description.map((desc, index) =>  \n                <p key={desc}>{desc}</p>\n            )}\n        </div>\n        )\n    }\n}\nexport default Description;","import React, { Component } from 'react';\nimport { Button } from 'react-bootstrap'\nimport store from \"../store\";\nimport '../App.css';\n\nclass Skills extends Component {\n    constructor() {\n        super()\n        this.state = {\n            pageInfo: {webDevSkills: [\"\"], langSkills: [\"\"], proSkills: [\"\"]}\n        }\n        store.subscribe(() => {\n            this.setState({\n              pageInfo: store.getState().pageInfo\n            })\n        })\n    }\n    render() {\n      return (\n        <div className=\"skills\">\n            <div className=\"skill\">\n                <h1>Web Developer Skills</h1>\n                {this.state.pageInfo.webDevSkills.map((skill, index) =>  \n                    <img className=\"imgskill\" src={skill.imgurl} key={skill.alt} alt={skill.alt} height={skill.height} width={skill.width} />\n                )}\n                <h1>Languages</h1>\n                    {this.state.pageInfo.langSkills.map((skill, index) =>  \n                       <div className=\"langSkills\" key={skill.alt}><img className=\"imgskill\" src={skill.imgurl} alt={skill.alt} height={skill.height} width={skill.width} /> {skill.level}</div>\n                    )}                   \n                <h1>Professional</h1>\n                <h3>{this.state.pageInfo.proSkills.map((skill, index) => skill + \", \" )} among others. </h3>\n            </div>\n            <Button id=\"cvlink\" href={this.state.pageInfo.CV} rel=\"noopener noreferrer\" target=\"_blank\" bsStyle=\"warning\">Download my CV!</Button>\n        </div>\n        )\n    }\n}\nexport default Skills;","import React, { Component } from 'react';\nimport { Row, Col, Alert } from 'react-bootstrap'\nimport '../App.css';\nimport store from \"../store\";\n\nclass Portfolio extends Component {\n    constructor() {\n        super()\n        this.state = {\n            pageInfo: {portfolio: [\"\"]}\n        }\n        store.subscribe(() => {\n            this.setState({\n              pageInfo: store.getState().pageInfo\n            })\n        })\n    }\n    render() {\n      return (\n        <div className=\"portfolio\">\n            <div className=\"pages\">\n                <h1>Portfolio</h1>\n                    <Row>\n                        {this.state.pageInfo.portfolio.map((port, index) =>  \n                            <Col key={port.name} sm={6}>\n                                <Alert bsStyle=\"warning\">\n                                    <Row>\n                                        <Col xsHidden sm={4} >\n                                            <a href={port.url} rel=\"noopener noreferrer\" target=\"_blank\"><img className=\"imgportfolio\" key={port.name} src={port.img} alt={port.name} height=\"120\" width=\"120\" /></a>\n                                        </Col>\n                                        <Col sm={8} >\n                                            <a href={port.url} rel=\"noopener noreferrer\" target=\"_blank\"><strong>{port.name}</strong></a>\n                                            <p><strong>Technologies:</strong> {port.technologies}</p>\n                                            <p><a rel=\"noopener noreferrer\" href={port.github} target=\"_blank\">Github link</a></p>\n                                        </Col>\n                                    </Row>\n                                </Alert>\n                            </Col>\n                        )}                \n                    </Row>\n\n            </div>\n        </div>\n        )\n    }\n}\nexport default Portfolio;","import React, { Component } from 'react';\n//import { Col } from 'react-bootstrap'\nimport '../App.css';\nimport store from \"../store\";\n\nclass Contact extends Component {\n    constructor() {\n        super()\n        this.state = {\n            pageInfo: {social: [\"\"]}\n        }\n        store.subscribe(() => {\n          this.setState({\n            pageInfo: store.getState().pageInfo\n          })\n        })\n    }\n    render() {\n      return (\n        <div>\n            <div className=\"contact\">\n                <div className=\"contactinfo\">\n                    <h1>Find me here!</h1>\n                    <h3><i className=\"fa fa-envelope\" /> {this.state.pageInfo.email}</h3> \n                </div>\n            </div>\n            <div className=\"social\">\n                <h3>\n                    {this.state.pageInfo.social.map((social, index) =>  \n                        <a rel=\"noopener noreferrer\" key={social.icon} href={social.link} target=\"_blank\"><i class={social.icon} /> {social.user} - </a>\n                    )}\n                </h3> \n            </div>\n        </div>\n        )\n    }\n}\nexport default Contact;","import React, { Component } from 'react';\nimport { Button, Row, Col, Alert } from 'react-bootstrap'\nimport store from \"../store\";\nimport '../App.css';\n\nclass Experience extends Component {\n    constructor() {\n        super()\n        this.state = {\n            pageInfo: {experience: [\"\"]}\n        }\n        store.subscribe(() => {\n            this.setState({\n              pageInfo: store.getState().pageInfo\n            })\n        })\n    }\n    render() {\n      return (\n        <div className=\"experience\">\n            <div className=\"xp\"> \n                <h1>Experience</h1>\n                <Row>\n                    {this.state.pageInfo.experience.map((xp, index) =>  \n                        <Col sm={6} >\n                            <Alert className={\"xpcard\"}>\n                                <Row>\n                                    <Col sm={2} >\n                                        <img src={xp.logo} alt={xp.institution} height=\"60\" width=\"60\"></img>\n                                    </Col>\n                                    <Col sm={10} >\n                                        <h2><a rel=\"noopener noreferrer\" target=\"_blank\" href={xp.link}>{xp.title}</a></h2>\n                                        <h4>{xp.subtitle}</h4>\n                                        <h4>{xp.institution}</h4>\n                                        <p>{xp.dates}</p>\n                                    </Col>\n                                </Row>\n                            </Alert>\n                        </Col>\n                    )}\n                </Row>\n            </div>\n        </div>\n        )\n    }\n}\nexport default Experience;","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport NavbarComp from './components/navbar'\nimport Description from './components/description'\nimport Skills from './components/skills'\nimport Portfolio from './components/portfolio'\nimport Contact from './components/contact'\nimport Experience from './components/experience'\nimport './App.css';\nimport axios from 'axios';\nimport store from \"./store\";\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = {\n      pageInfo: []\n    }\n    axios.get(\"/pageinfo.json\")\n      .then(response => {\n        this.setState({\n          pageInfo: response.data[0]\n        })\n        store.dispatch( {\n          type: \"setPageInfo\",\n          pageInfo: response.data[0]\n      })\n      })\n      .catch(error => {\n          console.log(error);\n      })\n  }\n  render() {\n    return (\n      <div>\n        <NavbarComp />\n        <a className=\"link-button\" name=\"home\">\n          <header>\n            <div className=\"name\">\n                <h1>{this.state.pageInfo.greet}</h1>\n                <p>{this.state.pageInfo.greetDescription}</p>\n            </div>\n          </header>\n        </a>\n      <a className=\"link-button\" name=\"description\"><Description /></a>\n      <a className=\"link-button\" name=\"skills\"><Skills /></a>\n      <a className=\"link-button\" name=\"portfolio\"><Portfolio /></a>\n      <a className=\"link-button\" name=\"experience\"><Experience /></a>\n      <a className=\"link-button\" name=\"contact\"><Contact /></a>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}