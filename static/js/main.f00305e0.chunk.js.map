{"version":3,"sources":["components/navbar.js","components/description.js","components/skills.js","components/portfolio.js","components/contact.js","components/experience.js","store.js","App.js","serviceWorker.js","index.js"],"names":["connect","state","pageInfo","props","react_default","a","createElement","Navbar","inverse","collapseOnSelect","className","Header","Brand","href","Toggle","Collapse","Nav","NavItem","eventKey","pullRight","social","map","index","concat","link","target","icon","description","desc","key","webDevSkills","skill","src","imgurl","alt","height","width","langSkills","level","proSkills","Button","id","CV","rel","bsStyle","Row","portfolio","Col","name","sm","Alert","xsHidden","img","url","technologies","github","email","class","user","experience","xp","logo","institution","title","subtitle","dates","createStore","action","type","Object","objectSpread","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","anchor","onClick","e","preventDefault","style","visibility","display","axios","get","then","response","setState","data","store","dispatch","catch","error","console","log","navbar","greet","greetDescription","skills","components_portfolio","contact","Component","Boolean","window","location","hostname","match","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f00305e0.chunk.js","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Nav, Navbar, NavItem } from 'react-bootstrap';\r\n\r\nconst NavbarComp = props => {\r\n  return (\r\n    <Navbar inverse collapseOnSelect className='navbar-fixed-top'>\r\n      <Navbar.Header>\r\n        <Navbar.Brand>\r\n          <a href='#home'> David R Zuluaga</a>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle />\r\n      </Navbar.Header>\r\n      <Navbar.Collapse>\r\n        <Nav>\r\n          <NavItem eventKey={1} href='#description'>\r\n            About Me\r\n          </NavItem>\r\n          <NavItem eventKey={2} href='#skills'>\r\n            Skills\r\n          </NavItem>\r\n          <NavItem eventKey={3} href='#portfolio'>\r\n            Portfolio\r\n          </NavItem>\r\n          <NavItem eventKey={4} href='#experience'>\r\n            Experience\r\n          </NavItem>\r\n          <NavItem eventKey={5} href='#contact'>\r\n            Contact\r\n          </NavItem>\r\n        </Nav>\r\n        <Nav pullRight className='hidden-xs'>\r\n          {props.pageInfo.social.map((social, index) => (\r\n            <NavItem href={`${social.link}`} eventKey={index} target='_blank'>\r\n              <i className={social.icon} />\r\n            </NavItem>\r\n          ))}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    pageInfo: state.pageInfo\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(NavbarComp);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Description = props => {\r\n  return (\r\n    <div className='description'>\r\n      {props.pageInfo.description.map((desc, index) => (\r\n        <p key={desc}>{desc}</p>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    pageInfo: state.pageInfo\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Description);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst Skills = props => {\r\n  return (\r\n    <div className='skills'>\r\n      <div className='skill'>\r\n        <h1>Web Developer Skills</h1>\r\n        {props.pageInfo.webDevSkills.map((skill, index) => (\r\n          <img\r\n            className='imgskill'\r\n            src={skill.imgurl}\r\n            key={skill.alt}\r\n            alt={skill.alt}\r\n            height={skill.height}\r\n            width={skill.width}\r\n          />\r\n        ))}\r\n        <h1>Languages</h1>\r\n        {props.pageInfo.langSkills.map((skill, index) => (\r\n          <div className='langSkills' key={skill.alt}>\r\n            <img\r\n              className='imgskill'\r\n              src={skill.imgurl}\r\n              alt={skill.alt}\r\n              height={skill.height}\r\n              width={skill.width}\r\n            />{' '}\r\n            <p>{skill.level}</p>\r\n          </div>\r\n        ))}\r\n        <h1>Professional</h1>\r\n        <h3>\r\n          {props.pageInfo.proSkills.map((skill, index) => skill + ', ')} among\r\n          others.{' '}\r\n        </h3>\r\n      </div>\r\n      <Button\r\n        id='cvlink'\r\n        href={props.pageInfo.CV}\r\n        rel='noopener noreferrer'\r\n        target='_blank'\r\n        bsStyle='warning'\r\n      >\r\n        Download my CV!\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    pageInfo: state.pageInfo\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Skills);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\n\r\nconst Portfolio = props => {\r\n  return (\r\n    <div className='portfolio'>\r\n      <div className='pages'>\r\n        <h1>Portfolio</h1>\r\n        <Row>\r\n          {props.pageInfo.portfolio.map((portfolio, index) => (\r\n            <Col key={portfolio.name} sm={6}>\r\n              <Alert bsStyle='warning'>\r\n                <Row>\r\n                  <Col xsHidden sm={4}>\r\n                    <img\r\n                      className='imgportfolio'\r\n                      src={portfolio.img}\r\n                      alt={portfolio.name}\r\n                      height='120'\r\n                      width='120'\r\n                    />\r\n                  </Col>\r\n                  <Col sm={8}>\r\n                    <a\r\n                      href={portfolio.url}\r\n                      rel='noopener noreferrer'\r\n                      target='_blank'\r\n                    >\r\n                      <strong>{portfolio.name}</strong>\r\n                    </a>\r\n                    <p>\r\n                      <strong>Technologies:</strong> {portfolio.technologies}\r\n                    </p>\r\n                    <p>\r\n                      <a\r\n                        rel='noopener noreferrer'\r\n                        href={portfolio.github}\r\n                        target='_blank'\r\n                      >\r\n                        Github link\r\n                      </a>\r\n                    </p>\r\n                  </Col>\r\n                </Row>\r\n              </Alert>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    pageInfo: state.pageInfo\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Portfolio);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Contact = props => {\r\n  return (\r\n    <div>\r\n      <div className='contact'>\r\n        <div className='contactinfo'>\r\n          <h1>Find me here!</h1>\r\n          <h3>\r\n            <i className='fa fa-envelope' /> {props.pageInfo.email}\r\n          </h3>\r\n        </div>\r\n      </div>\r\n      <div className='social'>\r\n        <h3>\r\n          {props.pageInfo.social.map((social, index) => (\r\n            <a\r\n              rel='noopener noreferrer'\r\n              key={social.icon}\r\n              href={social.link}\r\n              target='_blank'\r\n            >\r\n              <i class={social.icon} /> {social.user} -{' '}\r\n            </a>\r\n          ))}\r\n          <a href={'mailto:' + props.pageInfo.email}>\r\n            <i className='fa fa-envelope' />{' '}\r\n          </a>\r\n        </h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    pageInfo: state.pageInfo\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Contact);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col, Alert } from 'react-bootstrap';\r\n\r\nconst Experience = props => {\r\n  return (\r\n    <div className='experience'>\r\n      <div className='xp'>\r\n        <h1>Experience</h1>\r\n        <Row>\r\n          {props.pageInfo.experience.map((xp, index) => (\r\n            <Col sm={6}>\r\n              <Alert className={'xpcard'}>\r\n                <Row>\r\n                  <Col sm={2}>\r\n                    <img\r\n                      src={xp.logo}\r\n                      alt={xp.institution}\r\n                      height='60'\r\n                      width='60'\r\n                    />\r\n                  </Col>\r\n                  <Col sm={10}>\r\n                    <h2>\r\n                      <a\r\n                        rel='noopener noreferrer'\r\n                        target='_blank'\r\n                        href={xp.link}\r\n                      >\r\n                        {xp.title}\r\n                      </a>\r\n                    </h2>\r\n                    <h4>{xp.subtitle}</h4>\r\n                    <h4>{xp.institution}</h4>\r\n                    <p>{xp.dates}</p>\r\n                  </Col>\r\n                </Row>\r\n              </Alert>\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    pageInfo: state.pageInfo\r\n  };\r\n}; /*\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n\r\n    }\r\n}*/\r\n\r\nexport default connect(mapStateToProps)(Experience);\r\n","import { createStore } from 'redux';\r\n\r\nconst reducer = (state, action) => {\r\n    if (action.type === \"setPageInfo\") {\r\n        return {\r\n            ...state,\r\n            pageInfo: action.pageInfo\r\n        }\r\n    } \r\n    return state;\r\n\r\n}\r\n\r\nexport default createStore(reducer, {pageInfo: {experience: [\"\"], portfolio: [\"\"], social: [\"\"], description: [\"\"], webDevSkills: [\"\"], langSkills: [\"\"], proSkills: [\"\"]}});","import React, { Component } from 'react';\r\n//import logo from './logo.svg';\r\nimport NavbarComp from './components/navbar';\r\nimport Description from './components/description';\r\nimport Skills from './components/skills';\r\nimport Portfolio from './components/portfolio';\r\nimport Contact from './components/contact';\r\nimport Experience from './components/experience';\r\nimport './App.scss';\r\nimport axios from 'axios';\r\nimport store from './store';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      pageInfo: []\r\n    };\r\n    axios\r\n      .get('/pageinfo.json')\r\n      .then(response => {\r\n        this.setState({\r\n          pageInfo: response.data[0]\r\n        });\r\n        store.dispatch({\r\n          type: 'setPageInfo',\r\n          pageInfo: response.data[0]\r\n        });\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      });\r\n  }\r\n  anchor = name => (\r\n    <a\r\n      className='link-button'\r\n      name={name}\r\n      href={'/'}\r\n      onClick={e => e.preventDefault()}\r\n      style={{ visibility: 'hidden', height: '0px', display: 'block' }}\r\n    >\r\n      .\r\n    </a>\r\n  );\r\n  render() {\r\n    return (\r\n      <div>\r\n        <NavbarComp />\r\n        {this.anchor('home')}\r\n        <header>\r\n          <div className='name'>\r\n            <h1>{this.state.pageInfo.greet}</h1>\r\n            <p>{this.state.pageInfo.greetDescription}</p>\r\n          </div>\r\n        </header>\r\n        {this.anchor('description')}\r\n        <Description />\r\n        {this.anchor('skills')}\r\n        <Skills />\r\n        {this.anchor('portfolio')}\r\n        <Portfolio />\r\n        {this.anchor('experience')}\r\n        <Experience />\r\n        {this.anchor('contact')}\r\n        <Contact />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}